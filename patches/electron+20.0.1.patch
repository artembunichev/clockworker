diff --git a/node_modules/electron/electron.d.ts b/node_modules/electron/electron.d.ts
index 8e2a580..74a1725 100644
--- a/node_modules/electron/electron.d.ts
+++ b/node_modules/electron/electron.d.ts
@@ -5073,7 +5073,7 @@ declare namespace Electron {
      * Listens to `channel`, when a new message arrives `listener` would be called with
      * `listener(event, args...)`.
      */
-    on(channel: string, listener: (event: IpcMainEvent, ...args: any[]) => void): this;
+    on<T>(channel: string, listener: (event: IpcMainEvent, arg: T) => void): this;
     /**
      * Adds a one time `listener` function for the event. This `listener` is invoked
      * only the next time a message is sent to `channel`, after which it is removed.
@@ -5190,7 +5190,7 @@ declare namespace Electron {
      * Listens to `channel`, when a new message arrives `listener` would be called with
      * `listener(event, args...)`.
      */
-    on(channel: string, listener: (event: IpcRendererEvent, ...args: any[]) => void): this;
+    on<T>(channel: string, listener: (event: IpcRendererEvent, arg: T) => void): this;
     /**
      * Adds a one time `listener` function for the event. This `listener` is invoked
      * only the next time a message is sent to `channel`, after which it is removed.
@@ -11361,7 +11361,7 @@ declare namespace Electron {
      *
      * An example of sending messages from the main process to the renderer process:
      */
-    send(channel: string, ...args: any[]): void;
+    send<T>(channel: string, arg: T): void;
     /**
      * Sends an input `event` to the page. **Note:** The `BrowserWindow` containing the
      * contents needs to be focused for `sendInputEvent()` to work.
